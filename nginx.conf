#user  nobody;
worker_processes  auto;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;
                               
#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include            mime.types;
    default_type       application/octet-stream;

    charset            UTF-8;
#TCP
    sendfile           on;
    tcp_nopush         on;
    tcp_nodelay        on;

    keepalive_timeout  60;
#GZIP
    gzip               on;
    gzip_vary          on;

    gzip_comp_level    6;
    gzip_buffers       16 8k;

    gzip_min_length    1000;
    gzip_proxied       any;
    gzip_disable       "msie6";

    gzip_http_version  1.0;

    gzip_types         text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript image/svg+xml;

    #编译时添加了 ngx_brotli 模块，需要增加 brotli 相关配置
    brotli             on;
    brotli_comp_level  6;
    brotli_types       text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript image/svg+xml;
   #下面是你自己的server配置(Other settings)
   # ...
server {
         listen 80;
      return 301 https://$host$request_uri;
  }
server {
        listen       443 ssl spdy http2 fastopen=3 reuseport;
        #server_name  localhost;
        server_tokens  off;
        #charset koi8-r;
        ssl_ciphers   ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-ECDSA-CHACHA20-POLY1305-OLD:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-CAMELLIA256-GCM-SHA384:ECDHE-ECDSA-CAMELLIA128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305-OLD:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-CAMELLIA256-GCM-SHA384:ECDHE-RSA-CAMELLIA128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:DHE-RSA-DES-CBC3-SHA:DHE-DSS-DES-CBC3-SHA:DES-CBC3-SHA:!aNULL:!eNULL;
        #access_log  logs/host.access.log  main;
        ssl_prefer_server_ciphers  on;
        ssl_protocols             TLSv1 TLSv1.1 TLSv1.2;
        ssl_session_cache          shared:SSL:50m;
        ssl_session_timeout        1d;
        ssl_session_tickets        on;
        #ECC
        ssl_certificate      cert.pem;
        ssl_certificate_key  key.pem;
        #RSA
        ssl_certificate      rsa.pem;
        ssl_certificate_key  rsa.key.pem;
        #2048-bit DH         
        ssl_dhparam         dhparams.pem;
        #1024
        ssl_dhparam   1024-dh.pem;   
        ssl_ecdh_curve X25519:sect571k1:sect571r1:P-521:brainpoolP512r1:sect409k1:sect409r1:P-384:brainpoolP384r1:sect283k1:sect283r1:P-256:brainpoolP256r1:secp256k1:sect233k1:sect233r1:sect239k1:P-224:secp224k1:sect193r1:sect193r2:secp192k1:prime192v1:sect163k1:sect163r2:sect163r1:secp160k1:secp160r1:secp160r2;
#下面是你自己的server配置(如add_header location等)      
        location / {
...
        }
#Other servers
server {
        listen       80 http2 fastopen=3 reuseport;
        listen       443 ssl spdy http2 fastopen=3 reuseport;
        #server_name  localhost;
        server_tokens  off;
        root html;
        #charset koi8-r;
        ssl_ciphers   ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-ECDSA-CHACHA20-POLY1305-OLD:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-CAMELLIA256-GCM-SHA384:ECDHE-ECDSA-CAMELLIA128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305-OLD:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-CAMELLIA256-GCM-SHA384:ECDHE-RSA-CAMELLIA128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:DES-CBC3-SHA:!aNULL:!eNULL;
        #access_log  logs/host.access.log  main;
        ssl_prefer_server_ciphers  on;
        ssl_protocols             TLSv1 TLSv1.1 TLSv1.2;
        ssl_session_cache          shared:SSL:50m;
        ssl_session_timeout        1d;
        ssl_session_tickets        on;
        #ECC
        ssl_certificate      cert.pem;
        ssl_certificate_key  key.pem;
        #RSA
        ssl_certificate      rsa.pem;
        ssl_certificate_key  rsa.key.pem;
        #2048-bit DH:openssl dhparam 2048 -out dhparams.pem         
        ssl_dhparam         dhparams.pem;
        ssl_ecdh_curve X25519:sect571k1:sect571r1:P-521:brainpoolP512r1:sect409k1:sect409r1:P-384:brainpoolP384r1:sect283k1:sect283r1:P-256:brainpoolP256r1:secp256k1:sect233k1:sect233r1:sect239k1:P-224:secp224k1:sect193r1:sect193r2:secp192k1:prime192v1:sect163k1:sect163r2:sect163r1:secp160k1:secp160r1:secp160r2;
    location = /favicon.ico {
        log_not_found off;
        access_log off;
    }
 
    location =/robots.txt {
        allow all;
        log_not_found off;
        access_log off;
    }
    # 所有静态文件都直通，解决了之前jpg等文件单独设置直通的问题，另外还可以直接支持固定链接
    location / {
        try_files $uri $uri/ /index.php?$args;
    }
    
    #自定义404
    #error_page  404              /404.html;
 
    #自定义错误页
    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   html;
    }
 
    #对上传目录禁止执行php，并阻止除图片以外的任何文件类型
    location /wp-content/uploads/ {
        if ($request_filename !~* \.(jpg|jpeg|gif|png)$) {
             return 403;
        }
        location ~ .*\.(php)?$ {
           deny all;
        }
    }
    # php文件发送到php5-fpm，现在这一段不需要写root目录了
    #
    location ~ \.php$ {
        #检查php文件是否真实存在，防止伪装成jpg的php等
        if (!-f $document_root$fastcgi_script_name) {
            return 404;
        }
        #fastcgi_pass   unix:/var/run/php7-fpm.sock;
        fastcgi_pass   127.0.0.1:9000;
        fastcgi_index  index.php;
        fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
        include        fastcgi_params;
    }
 
    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    location ~ /\.ht {
        deny  all;
    }
    #js css 图片等文件最大化有效期，不记录访问
    location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
        expires max;
        log_not_found off;
    }
}
        }
}
